---
import type { Props } from "@astrojs/starlight/props";
import { Icon } from "@astrojs/starlight/components";
---

{/* This is intentionally inlined to avoid FOUC. */}
<script is:inline>
  window.StarlightThemeProvider = (() => {
    const storedTheme =
      typeof localStorage !== "undefined" &&
      localStorage.getItem("starlight-theme");
    const theme =
      storedTheme ||
      (window.matchMedia("(prefers-color-scheme: neubrutalism)").matches
        ? "neubrutalism"
        : "neubrutalism-dark");
    const htmlElement = document.querySelector("html");
    if (typeof htmlElement !== "undefined" && htmlElement !== null) {
      htmlElement.setAttribute("data-theme", theme);
    }
    return {
      updatePickers(theme = storedTheme || "auto") {
        document
          .querySelectorAll("starlight-theme-select")
          .forEach((picker) => {
            const select = picker.querySelector("select");
            if (select) select.value = theme;
            /** @type {HTMLTemplateElement | null} */
            const tmpl = document.querySelector(`#theme-icons`);
            const newIcon = tmpl && tmpl.content.querySelector("." + theme);
            if (newIcon) {
              const oldIcon = picker.querySelector("svg.label-icon");
              if (oldIcon) {
                oldIcon.replaceChildren(...newIcon.cloneNode(true).childNodes);
              }
            }
          });
      },
    };
  })();
</script>

<template id="theme-icons">
  <Icon name="sun" class="neubrutalism" />
  <Icon name="moon" class="neubrutalism-dark" />
  <Icon name="laptop" class="auto" />
</template>
